---
- name: Include variables
  include_vars:
    file: ../../vars.yaml

- name: reload systemd config
  ansible.builtin.systemd:
    daemon_reload: yes

- name: enable service elasticsearch and ensure it is not masked
  ansible.builtin.systemd:
    name: elasticsearch
    enabled: yes
    masked: no

- name: Check the presence of elasticsearch yml backup
  stat:
    path: /etc/elasticsearch/elasticsearch.bkp.yml
  register: elastic_backup_file

- name: Backup default Elastic config
  ansible.builtin.command: mv "{{ elastic_yaml }}" /etc/elasticsearch/elasticsearch.bkp.yml
  when: not elastic_backup_file.stat.exists

- name: Remove Elastic Config YAML
  file:
      path: "{{ elastic_yaml }}"
      state: absent

- name: Wait for 2 seconds to allow config backup
  wait_for:
    timeout: 2

- name: Add Details To Elastic Config YAML
  blockinfile:
    path: "{{ elastic_yaml }}"
    create: yes
    marker: ''
    block: |
       cluster.name: {{ elastic_cluster_name }}
       node.name: {{ inventory_hostname }}
       network.host: 0.0.0.0
       http.port: {{ elastic_port }}
       node.master: false
       node.data: true
       node.ingest: false
       discovery.seed_hosts: ["{{ elastic_dns }}", "{{ elastic_node01_dns}}", "{{ elastic_node02_dns}}"]
       cluster.initial_master_nodes: ["{{ elastic_dns }}"]
       path.data: /var/lib/elasticsearch
       path.logs: /var/log/elasticsearch
       xpack.security.transport.ssl.enabled: true
       xpack.security.transport.ssl.key: /etc/elasticsearch/certs/{{ inventory_hostname }}/{{ inventory_hostname }}.key
       xpack.security.transport.ssl.certificate: /etc/elasticsearch/certs/{{ inventory_hostname }}/{{ inventory_hostname }}.crt
       xpack.security.transport.ssl.certificate_authorities: [ "/etc/elasticsearch/certs/ca.crt" ]
       xpack.security.http.ssl.enabled: true
       xpack.security.http.ssl.key: /etc/elasticsearch/certs/{{ inventory_hostname }}/{{ inventory_hostname }}.key
       xpack.security.http.ssl.certificate: /etc/elasticsearch/certs/{{ inventory_hostname }}/{{ inventory_hostname }}.crt
       xpack.security.http.ssl.certificate_authorities: [ "/etc/elasticsearch/certs/ca.crt" ]
       xpack.security.enabled: true
       xpack.security.transport.ssl.verification_mode: certificate
       xpack.security.http.ssl.verification_mode: certificate
      #  xpack.security.transport.ssl.keystore.path: /etc/elasticsearch/certs/elastic-certificates.p12
      #  xpack.security.transport.ssl.truststore.path: /etc/elasticsearch/certs/elastic-certificates.p12
      #  xpack.security.http.ssl.keystore.path: /etc/elasticsearch/certs/elastic-certificates.p12
      #  xpack.security.http.ssl.truststore.path: /etc/elasticsearch/certs/elastic-certificates.p12
      #  node.ml: false
      #  bootstrap.memory_lock: true
      #  indices.recovery.max_bytes_per_sec: 100mb

- name: Create a certificate directory
  file:
    owner: elasticsearch
    group: elasticsearch
    recurse: yes
    mode: u=rwx,g+rx,o-rwx
    path: /etc/elasticsearch/certs
    state: directory

- name: Copy the elastic_datanode certs from local to server
  copy: 
    src: "files/{{ inventory_hostname }}"
    dest: "/etc/elasticsearch/certs/"

- name: Copy CA to server
  copy: 
    src: "files/ca.crt"
    dest: "/etc/elasticsearch/certs/ca.crt"

- name: set elasticsearch permissions in etc dir
  file:
    path: /etc/elasticsearch/
    state: directory
    recurse: yes
    owner: elasticsearch
    group: elasticsearch

- name: set elasticsearch permissions in Home dir
  file:
    path: /usr/share/elasticsearch
    state: directory
    recurse: yes
    owner: elasticsearch
    group: elasticsearch

- name: Set min JVM Heap size.
  ansible.builtin.lineinfile:
    path: /etc/elasticsearch/jvm.options.d/heap_size
    create: yes
    regexp: "^-Xms"
    line: "-Xms{{ elasticsearch_jvm_xms }}"

- name: Set max JVM Heap size.
  ansible.builtin.lineinfile:
    path: /etc/elasticsearch/jvm.options.d/heap_size
    create: yes
    regexp: "^-Xmx"
    line: "-Xmx{{ elasticsearch_jvm_xmx }}"

- name: Restart ElasticSearch Service
  ansible.builtin.systemd: 
    name: elasticsearch
    state: restarted
